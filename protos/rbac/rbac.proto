syntax = "proto3";

option go_package = ".;rbac";

package rbac;

import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

service Rbac {
    rpc AddUser(User) returns (Response);
    rpc RemoveUser(Request) returns (Response);
    rpc QueryUserRoles(Request) returns (Roles);
    rpc QueryUserResources(Request) returns (Resources);
    rpc LinkUserRole(LinkRequest) returns (Response);
    rpc UnlinkUserRole(LinkRequest) returns (Response);

    rpc AddRole(Role) returns (Response);
    rpc RemoveRole(Request) returns (Response);
    rpc QueryRoleResources(Request) returns (Resources);
    rpc LinkRoleResource(LinkRequest) returns (Response);
    rpc UnlinkRoleResource(LinkRequest) returns (Response);

    rpc AddResource(Resource) returns (Response);
    rpc RemoveResource(Request) returns (Response);
}



message Request {
	string id = 1  [(validate.rules).string.max_len = 36];
}

message LinkRequest {
	string id1 = 1  [(validate.rules).string.max_len = 36];
	string id2 = 2  [(validate.rules).string.max_len = 36];
}

message Response {
	string msg = 1;
}

message User {
	string id = 1  [(validate.rules).string.max_len = 36];
	string name = 2 [(validate.rules).string = {min_len: 2, max_len: 10}];
    int32 age = 3 [(validate.rules).int32 = {gt: 0, lte: 180}];
    int32 gender = 4 [(validate.rules).int32 = {in: [0,1,2]}]; //0: female,1 male,2,unkonwn
}

message Role {
	string id = 1 [(validate.rules).string.max_len = 36];
	string name = 2 [(validate.rules).string = {min_len: 2, max_len: 10}];
}

message Roles {
    repeated Role roles = 1;
}

message Resource {
	string id = 1[(validate.rules).string.max_len = 36];
	string name = 2 [(validate.rules).string = {min_len: 2, max_len: 10}];
}

message Resources {
    repeated Resource resources = 1;
}
